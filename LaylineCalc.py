from datetime import datetime
import PySimpleGUI as sg
import webbrowser as web
import pyperclip, math, random, os

#-------------------------------original code-----skip ahead to get to my code---------------------------------
code=('''print(\'''This is the original version of the MouldCalc written by Bjorn
slightly optimized by Soup to make it more user-friendly


\''')
print('Hello there Traveller! This calculator will help you find laylines of 3 star deposits on any planet in NMS')
def query ():
    while True:
        print('If you want to jump straight to the calculator input 1. To learn more about how laylines work input 2. For information about 3 star deposits input 3.')
        answer = input()
        if answer == '1':
            break
        elif answer == '2':
            print('Laylines are lines of longitude that will spawn 3 star deposits. if you find a layline either by yourselfor or using this calculator all you have to do is to go straight North or South and you will find deposits. Laylines found using this calculator are valid between 45°N and 45°S. That doesnt mean there will be no deposits. It means that laylines arent that certain outside of that range')
        elif answer == '3':
            print('3 star deposits are a type of resource that can be found on any planet. There are 3 types of that deposit.')
            print('Sac venom: if you get too close you will receive damage, if you pick it up you will allert sentinels.')
            print('Metal fingers: Can be mined with advanced mining laser and will drop large amounts of either uranium or gold.') 
            print('Curious deposit: can be mined with advanced mining laser. Will start to roll when hit and drop large amounts of runaway mould. Runaway mould refines 5:1 nanites.')
            print('Each planet will spawn only one type of the 3 star deposit. if the one you found isnt the one you are looking for, you will have to go to a different planet')
            print('3 star deposits respawn based on distance. if you can get far enough to unload the terrain the deposits will respawn when you come back')
        else:
            print('Please select a valid answer')

def calculator():
    marker = input('Land on a planet and input coordinates of your starship. you can see them in 1st person on your dashboard. Divide coordinates with a comma ",": ')
    marker = marker.split(",")
    while True:
        player = input('walk or drive with your exocraft either straight North or South. Second coordinate needs to be exactly the same when you take a measurement. Drive or walk until distance from your starship changes from units to minutes. Note the distance and your characters coordinates. Now input your Coordinates here divided by a comma ",": ')
        player = player.split(",")
        if marker[1] != player[1]: 
            print('your second coordinate doesnt match second coordinate of your starship, make sure sure your input is correct')
        else:
            break
    distance = int(input('input distance from your ship in units: '))
    degree_per_unit = abs(float(player[0]) - float(marker[0])) / distance
    degree_655 = degree_per_unit * 655
    return degree_655

def seeker():
    print('Do you want me to look for neighbouring laylines?')
    answer = input('(Y/N)')
    if answer.upper() == 'N':
        print('Thank you for using my calculator. System shutdown.')
    elif answer.upper() == 'Y':
        print('which layline do you want to expand on?')
        l = int(input('choose a number from 1 to 8: ')) - 1
    
        l = float(str(laylines[l]))
    
        new_laylines = []
        new_laylines = new_laylines + [l]
        l = float(str(new_laylines[0]))
        while True:
            l = l - degree_655
            if len(new_laylines) == 4:
                break
            elif l <= -180:
                l = l + 360
                new_laylines = new_laylines + [l]
            else:
                new_laylines = new_laylines + [l]
            
        l = float(str(new_laylines[0]))
        while True:
            l = l + degree_655
            if len(new_laylines) ==7:
                break
            elif l >= 180:
                l = l - 360
                new_laylines = new_laylines + [l]
            else:
                new_laylines = new_laylines + [l]
        
        new_laylines.sort()
        for l in new_laylines:
            print('L' + str(int(new_laylines.index(l)) +1) + ": " + str(round(l,2)))
            
query()
degree_655 = calculator()

x = [0,90,-90,180]

print('maximum degree difference between laylines: ' + str(float(degree_655)))
laylines = []
for i in range(-180,181,90):
    i = round(int(i) + degree_655/2, 2)
    if -180 < i < 180:
        laylines = laylines + [i]
for i in range(-180,181,90):
    i = round(int(i) - degree_655/2, 2)
    if -180 < i < 180:
        laylines = laylines + [i]
    
laylines.sort()
for i in laylines:
    print( 'L'+ str(int(laylines.index(i)) + 1) + ': ' + str(i))

seeker()

print ('Thank you for using my calculator')
''')
#--------------------------------------------------end code--------------------------------------------------

#-----debugging-----
#print("Current working directory:", os.getcwd())
#print(f"Current working directory: {os.getcwd()}")

#-----fonts-----
#for font in sg.Text.fonts_installed_list():
#   print(font)

os.chdir(os.path.expanduser("~/Downloads"))

path = None
calcDone = False

font1 = '"Calibri" 12'
font2 = '"Futura PT Demi" 12'
font3 = '"GeosansLight-NMS" 12'

guide_base64=b''
info_base64=b''


#------------------------------------------functions-----------------------------------------------------------
def is_valid_input(value):
    # Allow only numbers, symbols, and empty input
    allowed_characters = "0123456789,.-"
    return all(char in allowed_characters for char in value)

def calculate():
    global lat1, lat2, long1, long2, distance, laylineDistance, verticalResult, calcDone
    calcDone = True
    
    laylineDistance = (655*(math.sqrt(abs(lat2-lat1)**2 + abs(long2-long1)**2))) / distance

    angles = [-90, 0, 90, 180]
    listAdd = [angle + (laylineDistance/2) for angle in angles]
    listSubtract = [angle - (laylineDistance/2) for angle in angles]

    listResult = listAdd + listSubtract

    for i in range (len(listResult)):
        if listResult[i] > 180:
            listResult[i] -= 360
        if listResult[i] < -180:
            listResult[i] += 360
        listResult[i] = round(listResult[i], 2)

    listResult.sort()
    verticalResult = "\n".join(map(str, listResult))

    return laylineDistance, verticalResult


def update():
    global coord1List, coord2List, coord1Var, coord2Var, lat1, long1, lat2, long2, distance, calcDisable, calcDone, logDisable, values

    try:
        coord1Var = values.get('coord1Input', '')  # Default to empty string if key is missing
    except:
        coord1Var=0
    try:
        coord2Var = values.get('coord2Input', '')
    except:
        coord2Var=0
    try:
        distance = values.get('distanceInput', '')
    except:
        distance=0

    try:
        # Remove unwanted characters and split into coordinates
        coord1Var = coord1Var.translate(str.maketrans('', '', '()'))
        coord2Var = coord2Var.translate(str.maketrans('', '', '()'))

        coord1List = coord1Var.split(',')
        coord2List = coord2Var.split(',')

        lat1 = float(coord1List[0])
        long1 = float(coord1List[1])
        lat2 = float(coord2List[0])
        long2 = float(coord2List[1])
        distance = float(distance)
    except:
        calcDisable = True
        window['calc'].update(image_data=go_disabled_base64)
    else:
        calcDisable = False
        window['calc'].update(image_data=go_base64)

    if calcDone:
        logDisable = False
        window['log'].update(image_data=log_base64)
    else:
        logDisable = True
        window['log'].update(image_data=log_disabled_base64)

    if path is not None:
        window['open'].update(image_data=open_base64)
    else:
        window['open'].update(image_data=open_disabled_base64)


def logCoords(filePath):
    global lat1, lat2, long1, long2, distance, laylineDistance, verticalResult, font

    log_file_path = filePath

    dt = datetime.now().strftime("%d/%m/%Y %H:%M:%S")  # Correct usage of datetime.now()
    
    with open(log_file_path, 'a') as file:
        file.write(f"Calculated at {dt}\n")
        file.write(f"Coordinates 1: ({lat1}, {long1}), Coordinates 2: ({lat2}, {long2})\n")
        file.write(f"Total Distance: {distance}\n")
        file.write(f"Distance from major long: {distance}\n")
        file.write("Laylines at longitudes:\n")
        file.write(f"{verticalResult}\n")
        file.write("-" * 40 + "\n")  # Divider for readability

    check_base64=b'iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAMAAAAp4XiDAAAAZlBMVEUAgAABhgEBNwEBXQEDggMAeAD+//7////8/fwAfgCAv4AJSQlhsGHg7eDN5M0CbwK82bwfix+m06YIgQj1+vWUrpRPpk9Od06SyJIwkjAwXTBwuHA5mznr9eutwa0QhRB1l3Vki2TYvC4uAAABrElEQVRIx9WVaZOCMAxAOXoFQW6PdUH3///JTTlKClTLt92MMzqjzyTPJAbB/w+GcQwAzjkcYRh/XpK05EeISyalbBLwJ76VVEoJmXDmSZSdVJgFqRL8On+eBwIZ+ZN7ZeHFRGCaV+xV1m0m8Pka+xAPQmSn3EevRFNDCKW+TuFn4t7MhG4+gs+yyoyU1UacfWKgPhOij/JwJFgAjhllvCLEOYonIsAB5XyfSCxZMwHwOGdFCrBDpIYQqjGyoC6kEEJWG0bP4qJXXiNsYKyq0sOmlKz4RlZHynotsu5i/KYNY8tqjawgSIWaU9/oLtiyikUWIvMbNuOSNRRGWzQ7R2WpQRaRQyZbGgZlNStZVpcFkS8fmllN1isCe7JWTIqMW9ZmsyemdsvaZ9Qld8siN4eW3tzIGq5k7TNieDhkWeva0X7Mi40sa2ob81FJFzeEN4fEjAGRlYfw9vgIi8HF3ZW13sGFUaJzyHIx+Ps4ZZGo9SkV5Mox8DimiZx31OfKjauQTJegfy9rlUdHH8UheP8r3tu+vR4gNBPHp5gfIJAJMdgRQl9cgGPEH4lfHvUfzKfAv20AAAAASUVORK5CYII='
    sg.popup_annoying('results logged', button_type=5, image=check_base64, background_color='green', auto_close=True, auto_close_duration=1, font=font1, modal=True)


def showHelp(key):
    r1=random.randint(2,99)
    r2=random.randint(2,99)
    r3=random.randint(2,99)
    r4=random.randint(2,99)
    r5=random.randint(101,500)
    if key=='coord':
        text=f'''Input your initial coordinates in the format: x,y
Example: {r1}.{r2},{r3}.{r4}

Find coordinates using either the Analysis Visor or your starship in first person'''


    elif key=='distance':
        text=f'''Input distance as a float-point number without the unit
Example: {r5} or {r5}.{r1}

Find distance in the middle of the Analysis Visor'''
        
    sg.popup_no_titlebar(text, font=font1, background_color='black', modal=False)

#--------------------------------------------------------------------------------------------------------------

# prep for layout
sg.theme('Darkgrey15')
calcDisable = True
logDisable = True

#image data for buttons
exit_base64=b'iVBORw0KGgoAAAANSUhEUgAAABIAAAAVBAMAAAC55aPcAAAAFVBMVEX/TEzmOjpHcEztU1btQ0XnLy/qKyvtYjTxAAAAB3RSTlP+cAA9m+P+tlauRAAAAEVJREFUCNdjSAODJCUlBggrGcRSggKiWAJMMJYDM4ylwGAEZCkKAgEDM5BlBjI6gQFFDKEOVS/CPJz2BsFYZnA3K8P8AQAlyiRkg6OKHAAAAABJRU5ErkJggg=='
icon_base64=b'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'
clear_base64=b'iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAMAAAC6V+0/AAAANlBMVEVHcEwtrL8pobIrp7krp7ktrcAsq70ynK0rp7ktrsAllqgrprkqm6wsqbksqrwqp7gsrL4rqrr+Y07VAAAAEnRSTlMAyCjwvOWzA6b7EUQaW2eVhF3ZCNQiAAAAbElEQVQY06WQSxbAIAgDo1YQtb/7X7aiz66wm2Y5EAgAH+JX+GwDDtqGrjwZk1Aaiq5PaMxFP11VymQVxeuywgi31rIyPqVRCsxh1ywuZm0i8aQFhSiS0cMlaQ5gCW27tWgRyQpvn2k/5MeTH5z8BaUE3etIAAAAAElFTkSuQmCC'
log_base64=b'iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAMAAAAM7l6QAAAAOVBMVEVHcEwrp7krprgsp7krp7krp7kqo7Qxo7crprksp7kqp7ktr8Esqbwsqrwrp7kvtcgvssUyv9MtrL8dVUVuAAAAEHRSTlMA6voRjFMjBUnZMOqq3Zi+kRjsNgAAAMdJREFUKM/Nkt2SwyAIRmmRH41akvd/2DVutirpdWfPRTKTMx9MAIB/jzgWyTk6Mg+L0Q6HRfyrC2rPG6YglyY7zHEYvbVaJCKliTildQ/+T8K+aBE14tKJKOI0QHolzp2KtzQsgxD4lMZwUsOHdHsQb4+T2DWNsfTiMhevlhhnjYSindQ2EhRi7YmrOO2Ufif25PaNM6W5tygCp5Nut41H74zYml9Lau9u5b3Q/THYCi/2PIcydEnOumNCb9fTqsVlV9KXzv8HX60MzLjllQcAAAAASUVORK5CYII='
log_disabled_base64=b'iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAMAAAAM7l6QAAAAM1BMVEVHcExPam5Qa3BPbHBQbHFPbHBPbHBKandQbXFPa29Nam5RbnJPbG9PbHBTcXVUcnZbe3+QLgXuAAAAD3RSTlMAK48R3VP6BepHH6rZh86XIducAAAAxklEQVQoz82SyxKDMAhFIYhIHib//7WN1DYJ7brTs3I8c0FvAvD3iGORMWVHisNSrp6W6TUXtO4fVAW5Ndfdp/fKk87MrDyRJ62t+D8pTScdRLQxbsYZRcKqAfDUmIzQP9rrpQiBz3RCCkb5koZr92FcjZTGoxYbLsvwipFmTUyiBvYTKQo5WeIezn343Vjs7zAxvlq7ahElQMPsccSxOxH15fd2oaeV94G2/RhsMc72ug7bsFm7RdfTBHm7PofTZVfwR9f/ATVVDLY0AxzHAAAAAElFTkSuQmCC'
go_base64=b'iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAMAAAC7IEhfAAAAM1BMVEVHcEwsqLorqLorp7oupbcsqLosp7krp7kttsY2o7ssqbssp7oqpLcsprkur8Isqbsvs8bLTUuFAAAADnRSTlMA6panFr9W+wIF038mTH8HjHAAAAFgSURBVDjLnVSLloQgCMVnmEX+/9cuoJXjNLvucGZOBpd7EwWALw0RExs//kB9eBlw/Pd7ts7ZvPvmeKIDjM5QESMyISI8kbIrrkTH0uwgWuMDKYJ3RApQRkkgcn5EImxr0ZgJNmcbjGaVdXtFMs6QsIXoq8fHIKxkXpCsu5J4o25KysiLKLm0+m5HCI51Kfi7eLLwgZHF3ZQIu+SGBAmErrn5VZC0X0hMLHwYz6GzoucXmYPFz9QEURKj8IG3druq10VqIitQkChiKLRkf5J2oUsg8oKXUvKiR4Iai/Wj8NxKfak5eiRVv5HsDZjLqaz+Qwq95FQ9rF2yAhPYshTbAQXK+pvcpxZMCuRqc1LqGfmn4SRyXPNnoEKfgO/Sy5P09Gb+UZ7Jgk8f4fyluK8Zvnb+eM3mL25rhTK0Ar61Ansnm4ttrl3nB8D8SJkfUsPYK5/H3vwg7Vt/XH897H+zH2YiHNDCZd5EAAAAAElFTkSuQmCC'
go_disabled_base64=b'iVBORw0KGgoAAAANSUhEUgAAACgAAAAoBAMAAAB+0KVeAAAAMFBMVEVHcExQbHBPWWlPa29BfHxQanBQbHBQbHBQbXFQbHBQbHBQbXFQbHBNaW5NaW9UcnYsUajRAAAAD3RSTlMA/gL5BBRTwOiWqNN/IizWvBlpAAABVklEQVQoz2NgwAOYlFxclBRQxSB8JiUUdQysObNWHgtgQFLLpKC24j8QdCUxIQQV2PZ/NAYC+d8JcFEm1vUfjeX//wcSvwJgBijc/mj4v33OyYr/wvJ7oUqZePsN/5cFMDCwpv8X/nEBolQh+rN8GwOTipMCQ8ZH+60QpQrrDb9fADmUSYm3XvgXWJCJ7bN8KQuDC0ibQ/hH+wQQg8n7s0SAA8ixIHc02m8By+YLfmNhYp35gAnGARlZb1+gwKD+3yYA6HMl9s/fQZKshiBjgo3ltzEogSyQCGCAUcGCgv/XAcMDaChQCRMPWANQUPDzESaQYQcUGFg4P/9UgggK/r6koDDffoIDAwvX5z8sUEEg3+G8/QJcgti0Y7UIq5OwOh67N7EGCDjoFNCCDmsgY40O7BGHFMUf4VGMNTFgTzZYExhyUkROoAy8GIkWe/KGZgR8OYUBADjeshuBnR/lAAAAAElFTkSuQmCC'
path_base64=b'iVBORw0KGgoAAAANSUhEUgAAABQAAAAUBAMAAAB/pwA+AAAAKlBMVEUrp7lHcEwsqLorp7ksp7ksqbsrqbssqLsrqLgoobsrp7osprgusMQxuc4414nkAAAADHRSTlP+AFWrzX7oliATKW1bU/ZHAAAARElEQVQI12MQhAMGZObW0AgoU+jOmWsLocwDDDwpLkDQCGIy8Jw5c4ZXEcwEAR4aMu+cAYOzigySxcZgYD6RAYfT4QAAjQwhFrlAjkcAAAAASUVORK5CYII='
open_base64=b'iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAAAXNSR0IArs4c6QAAAd5JREFUOE+tlMsuBEEUhv/qmkiMJ3BZMeISYwyJvY2FEHENyViReAOJRKIjNhYWlhZWbolrhFiIV2BMxGViWIjbCyBhqkqqp5oaXU1L9Kpyqs7X/znnryL454/48mzb+tyzbe6s9Zie6O4D8AJlknbgrwUYFTbN74ZF+LXEhR0P9WekulikboKARPWfEEGmk0PdKUe9bfMvoArEltZbAWsBQLGWOGvR0Bxn2fvvigmwcZLo6fMCAUhl2aK3NIAyAEwHpjKn4w2R6ACALgF0uXsE2PYClbrGxbUII/QqB+NtVIgbmeiUDCC+ulPCWPaQADUa0KAwH3gJgFo0VJoc7HxwE+OLWzFOxJ5UL4ALCzgTQK+5ZK9CUMEqj6/PHYXxivqoCwNwRwVr4YQ2C2AZEJOpRO9Ufg/9gKrU2NLmDIAxCbMEaXemqlqQTCefdJvlpvwLUPaOs/cRKviK7Kca3qRMlcMKDlQl5xndtq3GitpyNbxca5RPv3wYYCi6/3KKs7cyRgWr/g3osc13MzNCygFrX/LMClXGD8Y2XWkqhxR6Lqg6Gu140Xyplv5XTybqn3uDHgE+nEr0HbhDlYcCPQ4meeSl8EFX5lXoRv7yfBnOBntgTRJ93kx/oAkSIPYBcsspJEy3W10AAAAASUVORK5CYII='
open_disabled_base64=b'iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAAAXNSR0IArs4c6QAAAeJJREFUOE+tlM9rE0EUx79vNtXiWQKNpoegVNEieOi9lx6kCoEEPCelh6BXQRCySC89eJBKhED2Vi+mFFQ8SP+JtJQqSg9NG43gVSRm9slbd+oku9sk4F529828z3zfvB+E//xQEs91XWXWXNf15du22X5mXWwRoDjZGyYNIFbh3dXVC9MpnTGw17XGFzlor9t+QsTz9iHawdr2htcyQk6BxlColJYY1AAwYxwJeNZT/HzKp5NhxQRuNmteMQKUjaLsXEp/AnAZgLaBN9PZx7vd9n1FnGdQ/t8ab0eAhl6slK/4wGeBEfgOgQ7FUUKW970HpcyUTzsArlvAqMIh4EcAzm/Fl9688DrGMf+wdEtpeheqPyDwPoMKsSHHKIQCrt5IZwOFrR9H8xbsWAGLmrFAhE0wqlsvG08H7jAJaEItVMrrDDwCcOw7vCxZNVdw++Lst0gdjgIGd6dpRRFeySGSvPMpXRWoJGtsoAnZdpDD97+3c2HygqsxdSr7gjocJyl2/YXZPhKbAq6NAkbKZriYGZxj0HuphliFxiGpsBP62ZEk9frO3Nt6/afVBH8/z2g9cRxo3/DnK4HLzZr3wR4oYw2HOIW/+k7HVhZRaAyTjK+4vWMN2DiFSTMzEZiQiJHmPxrkMiQYJRvfAAAAAElFTkSuQmCC'

#main window layout
layout = [ [sg.Text('Welcome to the NMS layline calculator!', font='"GeosansLight-NMS" 14')],
           [sg.Text('First coordinates: '), sg.Push(), sg.Input(key='coord1Input', size=(15,1), justification='center', background_color='firebrick4', text_color='black', font=font2, enable_events=True), sg.Button('?', key='helpCoord1')],
           [sg.Text('Second coordinates: '), sg.Push(), sg.Input(key='coord2Input', size=(15,1), justification='center', background_color='firebrick4', text_color='black', font=font2, enable_events=True), sg.Button('?', key='helpCoord2')],
           [sg.Text('Distance: '), sg.Push(), sg.Input(key='distanceInput', size=(15,1), justification='center', background_color='firebrick4', text_color='black', font=font2, enable_events=True), sg.Button('?', key='helpDistance')],
           [sg.Button('Guide', tooltip='How to use the calculator'), sg.Button('Info', tooltip='Info about deposits and laylines'), sg.Button('About', tooltip='About the calculator'), sg.Push(),
            sg.Button('', image_data=clear_base64, button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, key='Clear', tooltip='Clear inputs (c)'),
            sg.Button('',image_data=go_disabled_base64, button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, key='calc', tooltip='Calculate (enter)')],
           [sg.Button('', image_data=exit_base64, button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, key='Exit', tooltip='Exit program (esc)'), sg.Push(),
            sg.Button('', image_data=log_base64, button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, key='log', tooltip='Log results to a text file (L)'),
            sg.Button('', image_data=path_base64, button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, key='path', tooltip='Change file path (p)'),
            sg.Button('', image_data=open_base64, button_color=(sg.theme_background_color(), sg.theme_background_color()), border_width=0, key='open', tooltip='Open txt file (o)')] ]

#create main window
window = sg.Window('Layline Calc', layout, font=font3, finalize=True,
                   use_custom_titlebar=True, titlebar_icon=icon_base64, titlebar_background_color='firebrick4', titlebar_font=font3, titlebar_text_color='black')
#keybinds:
window.bind('<Escape>','Exit')
window.bind('<escape>','Exit')
window.bind('<Return>','calc')
window.bind('<c>','Clear')
window.bind('<l>','log')
window.bind('<p>','path')
window.bind('<o>','open')
window.bind('<y>','copy')

#main window loop
while True:
    event, values = window.read(timeout=10)


    if event in (None, 'Exit', sg.WIN_CLOSED):
        break

    update()
    
    if values is None:
        continue

    elif event == 'calc':
        if not calcDisable:
            calculate()
            sg.Popup(f'''Distance between major longitude and layline: {str(round((distance),2))}°

Laylines at longitudes:

{str(verticalResult)}''', title='Result', font=font3, background_color='green', text_color='black', button_color='chartreuse4', icon=icon_base64, modal=True)

    elif event == 'Clear':
        window['coord1Input'].update('')
        window['coord2Input'].update('')
        window['distanceInput'].update('')

    elif event == 'log':
        if not logDisable:
            try:
                if path is None:
                    path = sg.popup_get_file('Choose or create a text file to log results', no_titlebar=True, background_color='black', file_types=(("Text Files", "*.txt"),), default_path='laylines.txt', size=(15, 1), font=font3)

                if path:
                    try:
                        logCoords(path)
                    except Exception as e:
                        print(f"Error logging to file: {e}")
                else:
                    x_base64=b'iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAMAAAAp4XiDAAAAVFBMVEX/AAB3AAD+TEz3RET/+vr79/fgBwf//////v7//Pz+UVGhSkq/AAD55uaaAADOqan/ISH+vLz9enq9fn7/ior9b2+1bm7vAQGEGhr+traaQkLIc3OH5kOGAAABfElEQVRIx9XW7W6DMAwFUEMdnDACFBi03fu/5xIYG0mJHX4OCamRfFQ+wrUBAPrpfh964I9+eN6nvehTkTtsyYqb9UVq2ASRMQbJ1IwokdBVEXnTo//lmGZMiXorMqYCmGhdsGYXREhjBc99lTZ/wtV0zYGkzEEQ6q51d/+7PjdH4S5sbgEsbwJhyD4a98QVZ0Kh8dWub4kxsfgoKuBNSqRNWqQMJ84NL86MJGJDOCEJIjL652RFbDBDRIZyRMKw4tQIYjU6EJoE4ZPE6EBYSQAM7jOiwyc1iqJU4b8YVUsC3+7F1ILQ709MyER99l4yMjHfBEIbLZtQRDtZzES3a9SoLmXiuq9u6kombjvxWiZu++r/ZeLtUib6vt1bupCJZCv/SV3LxK8l7JViJkbtNScTjW+vh76fkYkuC1ro1T5dZGSiG1x8e3UzDPoZRspERFdEc7Hsk5K2Lz4Tt0lpLhq/Wqqx6+aHkFfV3HXjYxN+2bRtI8QVLL7IX9U3FWAqlj3aohsAAAAASUVORK5CYII='
                    sg.popup_annoying('No file selected', button_type=5, image=x_base64, background_color='red', auto_close=True, auto_close_duration=1, font=font1, modal=True)

            except Exception as e:
                print(f"Unexpected error: {e}")
                

    elif event == 'path':
        path_temp = path
        path = sg.popup_get_file('choose or create a txt file to log results', no_titlebar=True, background_color='black', file_types=(("Text Files", "*.txt"),), default_path='laylines.txt', size=(15,1), font=font3)
        if path == None:
            path=path_temp

    elif event == 'open':
        if path is not None:
            try:
                os.startfile(path)
            except:
                with open('laylines.txt', 'w'):
                    pass
                os.startfile(path)

    elif event == 'copy':
        pyperclip.copy(code)
        web.open('https://www.programiz.com/python-programming/online-compiler/')
        break

    elif event == 'Guide':
        sg.Popup('''1. Land on a planet and drop a marker (that can be your starship, save beacon, navigational marker etc.)

2. Record coordinates of your marker in "First Coordinates" - remember to use the format (lat,long)

3. Walk or drive for at least 1000u from the marker and record your new position in "Second Coordinates" using the same format

4. Use the visor to get the distance from the save beacon and record that in "Distance"

5. Click "Calculate" or press ENTER''', title='How to use the calculator', image=guide_base64, line_width=200, font=font3, icon=icon_base64, modal=False)

    elif event == 'Info':
        sg.Popup('''Laylines:


Laylines are lines of longitude (second coordinate) that will spawn 3-star deposits.

If you find a layline either by yourself or using this calculator, all you have to do is to go straight North or South and you will find deposits.

Laylines found using this calculator are valid between 45°N and 45°S - That doesnt mean there will be no deposits, but rather that laylines are not certain outside that range.




3-Star Deposits:


3-star deposits are a type of resource that can be found on any planet.

There are 3 types of these deposits:

- Sac Venon: If you get too close you will be damaged, and picking them up will alert sentinels to lvl 3 (quad spawns)

- Metal Fingers: Can be mined with the Advanced Mining Laser and will drop large amounts of either Uranium or Gold

- Curious Deposit: Can be mined with the Advanced Mining Laser and will start to roll ayway when hit.

  These drop large amounts of Runaway Mould, which refines 5:1 into nanites


Each planet will only spawn one type of these 3-star deposits. If you find one that you aren't looking for, you will have to go to another planet.

3-star deposits respawn based on distance, meaning if you go far enough to unload the terrain, the deposits will respawn when you come back.

''', title='Info on laylines and deposits', image=info_base64, line_width=200, font=font3, icon=icon_base64, modal=False)


    elif event == 'About':
        about_icon_base64=b'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQBAMAAADt3eJSAAAAElBMVEX///8viP8AAAD///+gyf/g7f+ECy9PAAAAAXRSTlMCrui5SgAAAC5JREFUCNdjYMAATEpgoMDAJAgGyAwRuIgxjCFsiMYQMYXrEjY2NsRqDswKDAAAPGYIIwAoQ1IAAAAASUVORK5CYII='
        sg.popup('''Designed and a lot of help from Bjorn the Void Trader
Python code by Soup Cat
Build by PyInstaller

version 2.8.0

UI icons from icons8.com



PS:
press Y and paste into the online compiler''', title='About / Credits', font='Rockwell', text_color='black', background_color='dodgerblue4', button_color='deepskyblue4', icon=about_icon_base64, modal=False)

    # ? buttons
    elif event == 'helpCoord1':
        showHelp('coord')

    elif event == 'helpCoord2':
        showHelp('coord')

    elif event == 'helpDistance':
        showHelp('distance')

    #force numbers in text fields
    if event == 'coord1Input':
        current_value = values['coord1Input']
        if not is_valid_input(current_value):
            # If invalid input detected, revert to the last valid state
            window['coord1Input'].update(current_value[:-1])
    if event == 'coord2Input':
        current_value = values['coord2Input']
        if not is_valid_input(current_value):
            # If invalid input detected, revert to the last valid state
            window['coord2Input'].update(current_value[:-1])
    if event == 'distanceInput':
        current_value = values['distanceInput']
        if not is_valid_input(current_value):
            # If invalid input detected, revert to the last valid state
            window['distanceInput'].update(current_value[:-1])

window.close()
os._exit(0)
